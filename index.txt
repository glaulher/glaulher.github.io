1:"$Sreact.fragment"
2:I[78534,["742","static/chunks/742-565a7562c8d1d87c.js","177","static/chunks/app/layout-5716ffa8cbe4d345.js"],"Providers"]
3:I[6538,["742","static/chunks/742-565a7562c8d1d87c.js","177","static/chunks/app/layout-5716ffa8cbe4d345.js"],"WrapperHeader"]
4:I[15244,[],""]
5:I[43866,[],""]
6:I[96570,["742","static/chunks/742-565a7562c8d1d87c.js","974","static/chunks/app/page-5900c0aa15e61cfb.js"],"HomePostSection"]
13:I[86213,[],"OutletBoundary"]
15:I[86213,[],"MetadataBoundary"]
17:I[86213,[],"ViewportBoundary"]
19:I[34835,[],""]
:HL["/_next/static/media/a34f9d1faa5f3315-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/277fcc79e498577f.css","style"]
7:Tbd1,
---

Uso o zsh h√° bastante tempo principalmente por conta do autocompletar com sugest√µes inteligentes. No entanto, recentemente descobri um plugin incr√≠vel para o bash que resolve exatamente esse problema: o ble.sh.

Combinando o ble.sh com o Starship e uma Nerd Font, o Bash fica moderno, produtivo e bonito. Abaixo explico o passo a passo completo para instalar e configurar tudo.

‚úÖ Pr√©-requisitos
Certifique-se de que os seguintes pacotes est√£o instalados:

```bash

sudo apt install make curl fzf # (ou o equivalente para sua distro)

```

üé® Instalando uma Nerd Font
Vamos usar o [**getnf**](https://github.com/getnf/getnf) para instalar uma fonte com √≠cones Nerd Font:

```bash

curl -fsSL https://raw.githubusercontent.com/getnf/getnf/main/install.sh | bash

```

Depois, execute:

```bash

getnf

```
Escolha uma fonte, como por exemplo a op√ß√£o 9 - CascadiaMono.
Ap√≥s a instala√ß√£o, altere a fonte do seu terminal para essa nova fonte.

‚öôÔ∏è Instalando o <a href="https://github.com/akinomyoga/ble.sh" style="color:blue;">ble.sh</a>
- Clone o reposit√≥rio nightly (√© o que funcionou comigo no fedora 42):

```bash
curl -L https://github.com/akinomyoga/ble.sh/releases/download/nightly/ble-nightly.tar.xz | tar xJf -
bash ble-nightly/ble.sh --install ~/.local/share

```


üöÄ Instalando o [**Starship**](https://starship.rs/)

```bash

curl -sS https://starship.rs/install.sh | sh

```
üß† Configurando o .bashrc
- Edite o arquivo `~/.bashrc` e adicione ao final:

```bash

# Inicializa o ble.sh de forma n√£o intrusiva para sess√µes interativas
[[ $- == *i* ]] && source ~/.local/share/blesh/ble.sh --noattach

# Configura√ß√µes do ble.sh
ble-bind -f up history-search-backward     # seta ‚Üë percorre hist√≥rico por prefixo
ble-bind -f down history-search-forward    # seta ‚Üì percorre hist√≥rico por prefixo
ble-import -d integration/fzf-completion   # usa fzf como menu de hist√≥rico/autocompletar
ble-import -d integration/fzf-key-bindings

# Inicializa o Starship (prompt moderno)
eval "$(starship init bash)"

# Ativa o ble.sh
[[ ! ${BLE_VERSION-} ]] || ble-attach

```

Salve e feche. Em seguida, recarregue o shell:

```bash

source ~/.bashrc

```

üß© Configurando o Starship

- Crie o diret√≥rio de configura√ß√£o (se ainda n√£o existir):

```bash

mkdir -p ~/.config

```

E dentro dele, crie o arquivo starship.toml com o seguinte conte√∫do:

```toml

"$schema" = 'https://starship.rs/config-schema.json'

command_timeout = 10000
add_newline = false

[username]
show_always = true

[cmd_duration]
disabled = false

[directory]
truncation_length = 8

[character]
success_symbol = '[‚ùØ](bold bright-blue)'

[battery]
disabled = true # Coloque como false para exibir o status da bateria

```


‚úÖ Resultado
Voc√™ ter√° um terminal Bash com:

- Sugest√µes de comandos anteriores com fzf

- Estilo visual moderno com Starship

- √çcones e s√≠mbolos com Nerd Font

- Experi√™ncia com auto-complete e Syntax highlighting no Bash

- Ao teclar ctrl+r ter√° um menu com fzf bem bacana.üòä8:Tf54,
---

üìå Corrigindo erro de libva no Fedora (Processadores Antigos - Driver i965)
Se ao executar o Google Chrome ou outros aplicativos gr√°ficos no terminal voc√™ v√™ um erro como:

```bash
libva error: /usr/lib64/dri/iHD_drv_video.so init failed
[6969:6969:0216/220637.474048:ERROR:gl_surface_presentation_helper.cc(260)] GetVSyncParametersIfAvailable() failed
```

Isso ocorre porque seu processador usa o driver antigo (i965) para acelera√ß√£o de v√≠deo, mas o sistema tenta carregar o driver novo (iHD), que n√£o √© compat√≠vel.

Este tutorial explica como corrigir esse problema no Fedora para processadores antigos que usam o driver i965.

‚úÖ Passo 1: Instalar os drivers necess√°rios
Primeiro, habilitar o RPM Fusion

```bash
sudo dnf install \
  https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
```

 instale os pacotes necess√°rios para suporte √† acelera√ß√£o de v√≠deo:

```bash
sudo dnf install libva.x86_64 libva-intel-hybrid-driver.x86_64 libva-utils.x86_64 libva-intel-driver
```

- libva.x86_64 ‚Üí Biblioteca de acelera√ß√£o de v√≠deo (VA-API).
- libva-intel-hybrid-driver.x86_64 ‚Üí Driver para GPUs Intel mais antigas.
- libva-utils.x86_64 ‚Üí Ferramentas √∫teis para testar a configura√ß√£o.
- libva-intel-driver ‚Üí Drive i965, esse drive vem do reposit√≥rio RPM Fusion


‚úÖ Passo 2: Definir o Driver Correto (i965)
Agora, vamos garantir que o sistema use o driver correto (i965).

Execute o seguinte comando para definir a vari√°vel de ambiente permanentemente:

```bash

sudo sh -c 'echo "LIBVA_DRIVER_NAME=i965" >> /etc/environment'
```

Isso faz com que todos os aplicativos gr√°ficos utilizem automaticamente o driver correto na pr√≥xima inicializa√ß√£o.



‚úÖ Passo 3: Reiniciar o Sistema
Para aplicar as mudan√ßas, reinicie o computador:

```bash

sudo reboot
```

‚úÖ Passo 4: Testar a Configura√ß√£o
Ap√≥s reiniciar, verifique se o sistema est√° usando o driver correto:

```bash
vainfo
```

Se tudo estiver correto, a sa√≠da deve conter algo parecido com:

```bash

libva info: VA-API version 1.19.0
libva info: Trying to open /usr/lib64/dri/i965_drv_video.so
libva info: Found init function __vaDriverInit_1_19
libva info: va_openDriver() returns 0
```
No meu caso carregou o i965, por√©m o Hybrido falha pois meu processador n√£o suporta, mas, a acelera√ß√£o de v√≠deo via hardware agora funciona.

```bash

Trying display: wayland
libva info: VA-API version 1.22.0
libva info: User environment variable requested driver 'i965'
libva info: Trying to open /usr/lib64/dri-nonfree/i965_drv_video.so
libva info: Trying to open /usr/lib64/dri-freeworld/i965_drv_video.so
libva info: Trying to open /usr/lib64/dri/i965_drv_video.so
libva info: Found init function __vaDriverInit_1_22
error: failed to resolve wl_drm_interface(): /lib64/libEGL_mesa.so.0: undefined symbol: wl_drm_interface
/usr/lib64/dri/hybrid_drv_video.so init failed
Not using hybrid_drv_video.so
libva info: va_openDriver() returns 0
vainfo: VA-API version: 1.22 (libva 2.22.0)
vainfo: Driver version: Intel i965 driver for Intel(R) Sandybridge Mobile - 2.4.0.pre1 (2.4.0.pre1)
vainfo: Supported profile and entrypoints
      VAProfileMPEG2Simple            :	VAEntrypointVLD
      VAProfileMPEG2Main              :	VAEntrypointVLD
      VAProfileH264ConstrainedBaseline:	VAEntrypointVLD
      VAProfileH264ConstrainedBaseline:	VAEntrypointEncSlice
      VAProfileH264Main               :	VAEntrypointVLD
      VAProfileH264Main               :	VAEntrypointEncSlice
      VAProfileH264High               :	VAEntrypointVLD
      VAProfileH264High               :	VAEntrypointEncSlice
      VAProfileH264StereoHigh         :	VAEntrypointVLD
      VAProfileVC1Simple              :	VAEntrypointVLD
      VAProfileVC1Main                :	VAEntrypointVLD
      VAProfileVC1Advanced            :	VAEntrypointVLD
      VAProfileNone                   :	VAEntrypointVideoProc


```
9:T3e0b,
---

Tenho utilizado o Neovim como meu editor de c√≥digo h√° um tempo.
No in√≠cio, optei por configur√°-lo manualmente, do zero.
No entanto, conforme fui adicionando mais plugins, comecei a enfrentar
dificuldades ‚Äî alguns tiveram suas APIs modificadas,
enquanto outros foram descontinuados. Isso tornou a atualiza√ß√£o com o Packer,
gerenciador de plugins que eu utilizava, uma tarefa problem√°tica,
pois frequentemente resultava em falhas no sistema.

Em busca de uma solu√ß√£o mais est√°vel, experimentei o LunarVim,
mas achei a configura√ß√£o um pouco "bloated". Recentemente,
optei pelo Kickstart.nvim, uma configura√ß√£o m√≠nima e eficiente mantida por TJ Devries,
um dos desenvolvedores do Neovim e respons√°vel por plugins essenciais
como Telescope e Plenary, que j√° v√™m integrados ao Kickstart.
At√© agora, a experi√™ncia tem sido excelente.

### Como instalar o Kickstart.nvim

Se voc√™ deseja testar o Kickstart.nvim, siga os passos abaixo:

1 ‚ûú **Instale o Neovim**

Se ainda n√£o tem o Neovim instalado, baixe a vers√£o mais recente no [site oficial](https://neovim.io/) ou instale via gerenciador de pacotes:

```sh
# No Debian/Ubuntu
sudo apt install neovim

# No Arch Linux
sudo pacman -S neovim

# No macOS (via Homebrew)
brew install neovim

# No openSUSE
sudo zypper install neovim
```

2 ‚ûú **[Clone o Kickstart.nvim](https://github.com/nvim-lua/kickstart.nvim)**

Para come√ßar com a configura√ß√£o m√≠nima do Kickstart.nvim, basta clonar o reposit√≥rio diretamente na pasta de configura√ß√£o do Neovim:

```sh
git clone --depth=1 https://github.com/nvim-lua/kickstart.nvim.git ~/.config/nvim
```

3 ‚ûú **Abra o Neovim e finalize a instala√ß√£o**

Execute o Neovim e os plugins ser√£o instalados automaticamente:

```sh
nvim
```

Aguarde a instala√ß√£o ser conclu√≠da e reinicie o editor para garantir que tudo esteja funcionando corretamente.

4 ‚ûú **Personalize sua configura√ß√£o**

O Kickstart.nvim √© apenas uma base m√≠nima. Voc√™ pode personaliz√°-lo editando o arquivo `init.lua` localizado em `~/.config/nvim/init.lua`. Se precisar adicionar novos plugins, edite a parte onde o `lazy.nvim` est√° configurado.

5 ‚ûú **Checkhealth**  
 Rode o comando :`checkhealth` no nvim e verifique a sa√≠da, instalando as ferramentas que faltam:

```lua

kickstart: require("kickstart.health").check()

kickstart.nvim ~
- NOTE: Not every warning is a 'must-fix' in `:checkhealth`

  Fix only warnings for plugins and languages you intend to use.
    Mason will give warnings for languages that are not installed.
    You do not need to install, unless you want to use those languages!
- System Information: {
  machine = "x86_64",
  release = "6.13.1-1-default",
  sysname = "Linux",
  version = "#1 SMP PREEMPT_DYNAMIC Mon Feb  3 05:33:25 UTC 2025 (1918d13)"
}
- OK Neovim version is: '0.10.4'
- OK Found executable: 'git'
- OK Found executable: 'make'
- OK Found executable: 'unzip'
- OK Found executable: 'rg'

==============================================================================
lazy: require("lazy.health").check()

lazy.nvim ~
- {lazy.nvim} version `11.16.2`
- OK {git} `version 2.48.1`
- OK no existing packages found by other package managers
- OK packer_compiled.lua not found

luarocks ~
- checking `luarocks` installation
- OK no plugins require `luarocks`, so you can ignore any warnings below
- OK {luarocks} `/usr/bin/luarocks 3.11.0`
- OK {lua5.1} `Lua 5.1.5  Copyright (C) 1994-2012 Lua.org, PUC-Rio`

==============================================================================
lspconfig: require("lspconfig.health").check()

LSP configs active in this session (globally) ~
- Configured servers: tailwindcss, jdtls, lua_ls, ts_ls, eslint
- OK Deprecated servers: (none)

LSP configs active in this buffer (bufnr: 1) ~
- Language client log: ~/.local/state/nvim/lsp.log
- Detected filetype: ``
- 0 client(s) attached to this buffer

Docs for active configs: ~

==============================================================================
mason: require("mason.health").check()

mason.nvim ~
- OK mason.nvim version v1.10.0
- OK PATH: prepend
- OK Providers:
  mason.providers.registry-api
  mason.providers.client
- OK neovim version >= 0.7.0

mason.nvim [Registries] ~
- OK Registry `github.com/mason-org/mason-registry version: 2025-02-11-soggy-foam` is installed.

mason.nvim [Core utils] ~
- OK unzip: `UnZip 6.00 of 20 April 2009, by Info-ZIP.  Maintained by C. Spieler.  Send`
- OK wget: `GNU Wget 1.25.0 constru√≠do em linux-gnu.`
- OK curl: `curl 8.11.1 (x86_64-suse-linux-gnu) libcurl/8.11.1 OpenSSL/3.2.3 zlib/1.3.1.zlib-ng brotli/1.1.0 zstd/1.5.6 libidn2/2.3.7 libpsl/0.21.5 libssh/0.11.1/openssl/zlib nghttp2/1.64.0 OpenLDAP/2.6.8`
- OK gzip: `gzip 1.13`
- OK tar: `tar (GNU tar) 1.35`
- OK bash: `GNU bash, vers√£o 5.2.37(1)-release (x86_64-suse-linux)`
- OK sh: `Ok`

mason.nvim [Languages] ~
- WARNING Go: not available
- ADVICE:
  - spawn: go failed with exit code - and signal -. go is not executable
- WARNING Composer: not available
- ADVICE:
  - spawn: composer failed with exit code - and signal -. composer is not executable
- WARNING PHP: not available
- ADVICE:
  - spawn: php failed with exit code - and signal -. php is not executable
- WARNING cargo: not available
- ADVICE:
  - spawn: cargo failed with exit code - and signal -. cargo is not executable
- OK node: `v22.13.1`
- OK Ruby: `ruby 3.4.1 (2024-12-25 revision 48d4efcb85) +PRISM [x86_64-linux-gnu]`
- OK luarocks: `/usr/bin/luarocks 3.11.0`
- WARNING julia: not available
- ADVICE:
  - spawn: julia failed with exit code - and signal -. julia is not executable
- OK python: `Python 3.11.11`
- OK java: `openjdk version "17.0.2" 2022-01-18`
- OK JAVA_HOME: `openjdk version "21.0.6" 2025-01-21`
- OK npm: `10.9.2`
- OK RubyGem: `3.6.2`
- OK javac: `javac 21.0.6`
- OK pip: `pip 24.3.1 from /usr/lib/python3.11/site-packages/pip (python 3.11)`
- OK python venv: `Ok`

mason.nvim [GitHub] ~
- OK GitHub API rate limit. Used: 0. Remaining: 60. Limit: 60. Reset: ter 11 fev 2025 21:29:59.
Install and authenticate via gh-cli to increase rate limit.

==============================================================================
nvim: require("nvim.health").check()

Configuration ~
- OK no issues found

Runtime ~
- OK $VIMRUNTIME: /usr/share/nvim/runtime

Performance ~
- OK Build type: RelWithDebInfo

Remote Plugins ~
- OK Up to date

terminal ~
- key_backspace (kbs) terminfo entry: `key_backspace=\177`
- key_dc (kdch1) terminfo entry: `key_dc=\E[3~`
- $VTE_VERSION="7803"
- $COLORTERM="truecolor"

External Tools ~
- OK ripgrep 14.1.1 (/usr/bin/rg)

==============================================================================
nvim-treesitter: require("nvim-treesitter.health").check()

Installation ~
- WARNING `tree-sitter` executable not found (parser generator, only needed for :TSInstallFromGrammar, not required for :TSInstall)
- OK `node` found v22.13.1 (only needed for :TSInstallFromGrammar)
- OK `git` executable found.
- OK `cc` executable found. Selected from { vim.NIL, "cc", "gcc", "clang", "cl", "zig" }
Version: cc (SUSE Linux) 14.2.1 20241007 [revision 4af44f2cf7d281f3e4f3957efce10e8b2ccb2ad3]
- OK Neovim was compiled with tree-sitter runtime ABI version 15 (required >=13). Parsers must be compatible with runtime ABI.

OS Info:
{
machine = "x86_64",
release = "6.13.1-1-default",
sysname = "Linux",
version = "#1 SMP PREEMPT_DYNAMIC Mon Feb  3 05:33:25 UTC 2025 (1918d13)"
} ~

Parser/Features         H L F I J
- bash                ‚úì ‚úì ‚úì . ‚úì
- c                   ‚úì ‚úì ‚úì ‚úì ‚úì
- diff                ‚úì . ‚úì . ‚úì
- html                ‚úì ‚úì ‚úì ‚úì ‚úì
- lua                 ‚úì ‚úì ‚úì ‚úì ‚úì
- luadoc              ‚úì . . . .
- markdown            ‚úì . ‚úì ‚úì ‚úì
- markdown_inline     ‚úì . . . ‚úì
- python              ‚úì ‚úì ‚úì ‚úì ‚úì
- query               ‚úì ‚úì ‚úì ‚úì ‚úì
- vim                 ‚úì ‚úì ‚úì . ‚úì
- vimdoc              ‚úì . . . ‚úì

Legend: H[ighlight], L[ocals], F[olds], I[ndents], In[j]ections
       +) multiple parsers found, only one will be used
       x) errors found in the query, try to run :TSUpdate {lang} ~

==============================================================================
provider.clipboard: require("provider.clipboard.health").check()

Clipboard (optional) ~
- OK Clipboard tool found: wl-copy

==============================================================================
provider.node: require("provider.node.health").check()

Node.js provider (optional) ~
- Node.js: v22.13.1

- Nvim node.js host: /home/glaulher/.nvm/versions/node/v22.13.1/lib/node_modules/neovim/bin/cli.js
- OK Latest "neovim" npm/yarn/pnpm package is installed: 5.3.0


==============================================================================
provider.perl: require("provider.perl.health").check()

Perl provider (optional) ~
- WARNING "Neovim::Ext" cpan module is not installed
- ADVICE:
  - See :help |provider-perl| for more information.
  - You may disable this provider (and warning) by adding `let g:loaded_perl_provider = 0` to your init.vim
- WARNING No usable perl executable found

==============================================================================
provider.python: require("provider.python.health").check()

Python 3 provider (optional) ~
- `g:python3_host_prog` is not set. Searching for python3 in the environment.
- Executable: /usr/bin/python3
- Python version: 3.11.11
- pynvim version: 0.5.2
- OK Latest pynvim is installed.

Python virtualenv ~
- OK no $VIRTUAL_ENV

==============================================================================
provider.ruby: require("provider.ruby.health").check()

Ruby provider (optional) ~
- Ruby: ruby 3.4.1 (2024-12-25 revision 48d4efcb85) +PRISM [x86_64-linux-gnu]
- WARNING `neovim-ruby-host` not found.
- ADVICE:
  - Run `gem install neovim` to ensure the neovim RubyGem is installed.
  - Run `gem environment` to ensure the gem bin directory is in $PATH.
  - If you are using rvm/rbenv/chruby, try "rehashing".
  - See :help |g:ruby_host_prog| for non-standard gem installations.
  - You may disable this provider (and warning) by adding `let g:loaded_ruby_provider = 0` to your init.vim

==============================================================================
telescope: require("telescope.health").check()

Checking for required plugins ~
- OK plenary installed.
- OK nvim-treesitter installed.

Checking external dependencies ~
- OK rg: found ripgrep 14.1.1
- OK fd: found fd 10.2.0

===== Installed extensions ===== ~

Telescope Extension: `ui-select` ~
- No healthcheck provided

==============================================================================
vim.lsp: require("vim.lsp.health").check()

- LSP log level : WARN
- Log path: /home/glaulher/.local/state/nvim/lsp.log
- Log size: 4 KB

vim.lsp: Active Clients ~
- No active clients

vim.lsp: File Watcher ~
- file watching "(workspace/didChangeWatchedFiles)" disabled on all clients

vim.lsp: Position Encodings ~
- No active clients

==============================================================================
vim.treesitter: require("vim.treesitter.health").check()

- Nvim runtime ABI version: 15
- OK Parser: bash                 ABI: 14, path: /home/glaulher/.local/share/nvim/lazy/nvim-treesitter/parser/bash.so
- OK Parser: c                    ABI: 14, path: /home/glaulher/.local/share/nvim/lazy/nvim-treesitter/parser/c.so
- OK Parser: diff                 ABI: 14, path: /home/glaulher/.local/share/nvim/lazy/nvim-treesitter/parser/diff.so
- OK Parser: html                 ABI: 14, path: /home/glaulher/.local/share/nvim/lazy/nvim-treesitter/parser/html.so
- OK Parser: lua                  ABI: 14, path: /home/glaulher/.local/share/nvim/lazy/nvim-treesitter/parser/lua.so
- OK Parser: luadoc               ABI: 14, path: /home/glaulher/.local/share/nvim/lazy/nvim-treesitter/parser/luadoc.so
- OK Parser: markdown             ABI: 14, path: /home/glaulher/.local/share/nvim/lazy/nvim-treesitter/parser/markdown.so
- OK Parser: markdown_inline      ABI: 14, path: /home/glaulher/.local/share/nvim/lazy/nvim-treesitter/parser/markdown_inline.so
- OK Parser: query                ABI: 14, path: /home/glaulher/.local/share/nvim/lazy/nvim-treesitter/parser/query.so
- OK Parser: vim                  ABI: 14, path: /home/glaulher/.local/share/nvim/lazy/nvim-treesitter/parser/vim.so
- OK Parser: vimdoc               ABI: 14, path: /home/glaulher/.local/share/nvim/lazy/nvim-treesitter/parser/vimdoc.so
- OK Parser: c                    ABI: 14, path: /usr/share/nvim/runtime/parser/c.so
- OK Parser: lua                  ABI: 14, path: /usr/share/nvim/runtime/parser/lua.so
- OK Parser: markdown             ABI: 14, path: /usr/share/nvim/runtime/parser/markdown.so
- OK Parser: markdown_inline      ABI: 14, path: /usr/share/nvim/runtime/parser/markdown_inline.so
- OK Parser: python               ABI: 14, path: /usr/share/nvim/runtime/parser/python.so
- OK Parser: query                ABI: 14, path: /usr/share/nvim/runtime/parser/query.so
- OK Parser: vim                  ABI: 14, path: /usr/share/nvim/runtime/parser/vim.so
- OK Parser: vimdoc               ABI: 14, path: /usr/share/nvim/runtime/parser/vimdoc.so

==============================================================================
which-key: require("which-key.health").check()

- OK Most of these checks are for informational purposes only.
WARNINGS should be treated as a warning, and don't necessarily indicate a problem with your config.
Please |DON'T| report these warnings as an issue.

Checking your config ~
- OK |mini.icons| is installed
- WARNING |nvim-web-devicons| is not installed

Checking for issues with your mappings ~
- OK No issues reported

checking for overlapping keymaps ~
- WARNING In mode `n`, <sf> overlaps with <sfn>, <sfl>:
- <sf>: Find right surrounding
- <sfn>: Find next right surrounding
- <sfl>: Find previous right surrounding
- WARNING In mode `n`, <sF> overlaps with <sFn>, <sFl>:
- <sF>: Find left surrounding
- <sFn>: Find next left surrounding
- <sFl>: Find previous left surrounding
- WARNING In mode `n`, <sd> overlaps with <sdn>, <sdl>:
- <sd>: Delete surrounding
- <sdn>: Delete next surrounding
- <sdl>: Delete previous surrounding
- WARNING In mode `n`, <sh> overlaps with <shn>, <shl>:
- <sh>: Highlight surrounding
- <shn>: Highlight next surrounding
- <shl>: Highlight previous surrounding
- WARNING In mode `n`, <sr> overlaps with <srn>, <srl>:
- <sr>: Replace surrounding
- <srn>: Replace next surrounding
- <srl>: Replace previous surrounding
- WARNING In mode `n`, <gc> overlaps with <gcc>:
- <gc>: Toggle comment
- <gcc>: Toggle comment line
- WARNING In mode `x`, <i> overlaps with <il>, <in>:
- <i>: Inside textobject
- <il>: Inside last textobject
- <in>: Inside next textobject
- WARNING In mode `x`, <a> overlaps with <a%>, <al>, <an>:
- <a>: Around textobject
- <al>: Around last textobject
- <an>: Around next textobject
- WARNING In mode `o`, <a> overlaps with <al>, <an>:
- <a>: Around textobject
- <al>: Around last textobject
- <an>: Around next textobject
- WARNING In mode `o`, <i> overlaps with <il>, <in>:
- <i>: Inside textobject
- <il>: Inside last textobject
- <in>: Inside next textobject
- OK Overlapping keymaps are only reported for informational purposes.
This doesn't necessarily mean there is a problem with your config.

Checking for duplicate mappings ~
- OK No duplicate mappings found

```

Essa sa√≠da do comando `checkhealth` no meu sistema openSUSE ja com o java e node instalados no sistema.

### Conclus√£o

O Kickstart.nvim oferece uma experi√™ncia m√≠nima e otimizada, permitindo que voc√™ construa sua configura√ß√£o sem dores de cabe√ßa. Se voc√™ quer um ambiente leve, f√°cil de manter e pronto para desenvolvimento, vale a pena testar!

üîó Reposit√≥rio oficial: [Kickstart.nvim](https://github.com/nvim-lua/kickstart.nvim)
a:Taa2,
---

H√° algum tempo, eu mantinha um blog utilizando Next.js. Por√©m, quando o Next.js 13 foi lan√ßado, precisei fazer algumas adapta√ß√µes para hosped√°-lo no GitHub Pages. Com o tempo, acabei deixando o projeto de lado, mas recentemente decidi retom√°-lo e atualizar tudo para a vers√£o mais recente.

Para isso, utilizei o template starter do Next.js como base:

```shell
npx create-next-app --example blog-starter blog-starter-app
```

A partir desse ponto, comecei removendo funcionalidades que n√£o precisava, refatorando componentes e recriando o layout. Busquei inspira√ß√£o no blog The Talha Tahir para definir o novo visual e estrutura.

Ajustes para build no GitHub Pages

Para garantir que o blog fosse corretamente constru√≠do e publicado no GitHub Pages, precisei ajustar algumas configura√ß√µes. O principal foi criar um arquivo next.config.js na raiz do projeto com o seguinte conte√∫do:

```json

/**
 * @type {import('next').NextConfig}
 */
const isProd = process.env.NODE_ENV === 'production';

const nextConfig = {
  reactStrictMode: true,
  ...(isProd && {
    images: {
      unoptimized: true,
    },
  }),
  ...(isProd && { output: 'export' }),
};

module.exports = nextConfig;

```

A vari√°vel isProd foi essencial para diferenciar os ambientes, pois durante o desenvolvimento, as op√ß√µes 'unoptimized: true' e 'output: export' estavam causando problemas na execu√ß√£o do projeto.

Estilizando blocos de c√≥digo

Outro ponto que quis melhorar foi a exibi√ß√£o de c√≥digo nos posts. Para isso, adicionei a biblioteca highlight.js e implementei a estiliza√ß√£o dos blocos de c√≥digo. Veja como ficou a configura√ß√£o no componente PostBody:

```javascript

'use client';

import markdownStyles from '../markdown-styles.module.css';
import { useEffect } from 'react';
import hljs from 'highlight.js';
import 'highlight.js/styles/github-dark.css';

type Props = { content: string };

export function PostBody({ content }: Props) {
  useEffect(() => {
    document.querySelectorAll('pre code').forEach((block) => {
      hljs.highlightElement(block as HTMLElement);
      block.parentElement?.classList.add(
        'shadow-lg',
        'rounded-lg',
        'p-2',
        'bg-gray-900'
      ); // Adiciona estilos ao bloco de c√≥digo
    });
  }, [content]);

  return (
    <div className="max-w-2xl mx-auto">
      <div
        className={markdownStyles['markdown']}
        dangerouslySetInnerHTML={{ __html: content }}
      />
    </div>
  );
}

```

Com essas melhorias, meu blog est√° atualizado, mais organizado e pronto para futuras publica√ß√µes! Se voc√™ tamb√©m est√° pensando em criar ou atualizar seu blog com Next.js, espero que este post tenha sido √∫til.

At√© a pr√≥xima! üöÄ

b:T536,
---

O `npm (Node Package Manager)` √© uma ferramenta importante para desenvolvedores de JavaScript que permite gerenciar e instalar depend√™ncias em projetos. Por√©m, gerenciar essas depend√™ncias pode se tornar uma tarefa complicada quando se tem muitas delas em um projeto. √â a√≠ que o `npx npm-check-updates` pode ajudar.

O `npm-check-updates` √© uma ferramenta que permite visualizar quais depend√™ncias em um projeto precisam ser atualizadas para sua vers√£o mais recente. Com o comando `npx`, √© poss√≠vel executar a vers√£o mais recente da ferramenta sem precisar instal√°-la localmente.

Para atualizar as depend√™ncias, basta executar o comando no terminal:

```shell
npx npm-check-updates -u
```

Ir√° retornar as depend√™ncias que podem ser atualizadas. Em seguida, executar o comando:

```shell
npm install
```

Instalar√° as novas vers√µes das depend√™ncias.

√â importante ressaltar que a atualiza√ß√£o de depend√™ncias pode causar problemas no projeto, especialmente quando se trata de depend√™ncias de vers√µes muito diferentes. √â sempre recomendado realizar testes ap√≥s a atualiza√ß√£o e verificar se tudo est√° funcionando corretamente.

Em resumo, o `npx npm-check-updates -u` √© uma ferramenta √∫til para gerenciar depend√™ncias em projetos `JavaScript`, permitindo atualiz√°-las de forma simples e r√°pida.
c:T2969,
---

A pagina√ß√£o √© um recurso que permite dividir grandes conjuntos de dados em p√°ginas facilitando a visualiza√ß√£o e a navega√ß√£o para o usu√°rio, √© amplamente utilizado em interfaces que precisam lidar com grandes volumes de dados.

Para criar um componete de pagina√ß√£o de exemplo utilizarei o vite:

```shell
npm create vite@latest paginate -- --template
```

No pr√≥ximo passo escolher react:

```shell
? Select a framework: ‚Ä∫ - Use arrow-keys. Return to submit.
    Vanilla
    Vue
‚ùØ   React
    Preact
    Lit
    Svelte
    Others
```

No pr√≥ximo passo escolher typescript:

```shell
‚úî Select a framework: ‚Ä∫ React
? Select a variant: ‚Ä∫ - Use arrow-keys. Return to submit.
    JavaScript
‚ùØ   TypeScript
    JavaScript + SWC
    TypeScript + SWC
```

Entrar na pasta e rodar o `npm install`

```shell
‚úî Select a framework: ‚Ä∫ React
‚úî Select a variant: ‚Ä∫ TypeScript

Scaffolding project in ~/Documentos/teste/paginate...

Done. Now run:

  cd paginate
  npm install
  npm run dev
```

Criar na raiz do projeto o arquivo `.eslintrc.json`, instalar o pacote a seguir:

```shell
npm i -D @rocketseat/eslint-config
```

Abrir o arquivo `.eslintrc.json` e deixar conforme a seguir:

```javascript
{
  "extends": "@rocketseat/eslint-config/react"
  // "extends": "@rocketseat/eslint-config/node"
}
```

[Baixe](https://raw.githubusercontent.com/glaulher/example/paginate/src/data/mock-data.json) o arquivo mock-data.json e coloque em `src/data/` , crie `Pagination.tsx` dentro de `src/`e deixe conforme a seguir:

```javascript
import React from 'react'
import { usePagination, DOTS } from './usePagination'
import './pagination.scss'

type PaginationProps = {
  onPageChange: (page: number) => void
  totalCount: number
  siblingCount: number
  currentPage: number
  pageSize: number
  className: string
}

const Pagination = ({
  onPageChange,
  totalCount,
  siblingCount = 1,
  currentPage,
  pageSize,
}: PaginationProps) => {
  const paginationRange = usePagination({
    currentPage,
    totalCount,
    siblingCount,
    pageSize,
  })

  if (currentPage === 0 || paginationRange!.length < 2) {
    return null
  }

  const onNext = () => {
    onPageChange(currentPage + 1)
  }

  const onPrevious = () => {
    onPageChange(currentPage - 1)
  }

  const lastPage = paginationRange![paginationRange!.length - 1]
  return (
    <ul className="pagination-container">
      <li
        className={`pagination-item ${currentPage === 1 && 'disabled'}`}
        onClick={onPrevious}
      >
        <div className="arrow left" />
      </li>
      {paginationRange!.map((pageNumber) => {
        if (pageNumber === DOTS) {
          return (
            <li key={pageNumber} className="pagination-item dots">
              &#8230;
            </li>
          )
        }

        return (
          <li
            className={`pagination-item ${
              pageNumber === currentPage && 'selected'
            }`}
            onClick={() => onPageChange(Number(pageNumber))}
            key={pageNumber}
          >
            {pageNumber}
          </li>
        )
      })}
      <li
        className={`pagination-item ${currentPage === lastPage && 'disabled'}`}
        onClick={onNext}
      >
        <div className="arrow right" />
      </li>
    </ul>
  )
}

export default Pagination
```

Crie `pagination.scss` dentro de `src/` deixando conforme abaixo:

```javascript
.pagination-container {
  display: flex;
  list-style-type: none;

  .pagination-item {
    padding: 0 12px;
    height: 32px;
    text-align: center;
    margin: auto 4px;
    color: rgba(0, 0, 0, 0.87);
    display: flex;
    box-sizing: border-box;
    align-items: center;
    letter-spacing: 0.01071em;
    border-radius: 16px;
    line-height: 1.43;
    font-size: 13px;
    min-width: 32px;

    &.dots:hover {
      background-color: transparent;
      cursor: default;
    }
    &:hover {
      background-color: rgba(0, 0, 0, 0.04);
      cursor: pointer;
    }

    &.selected {
      background-color: rgba(0, 0, 0, 0.08);
    }

    .arrow {
      &::before {
        position: relative;
        /* top: 3pt; Remova essa linha do coment√°rio para baixar os √≠cones conforme solicitado nos coment√°rios*/
        content: '';
        /* Usando uma escala em, as setas ter√£o o tamanho acompanhando a fonte */
        display: inline-block;
        width: 0.4em;
        height: 0.4em;
        border-right: 0.12em solid rgba(0, 0, 0, 0.87);
        border-top: 0.12em solid rgba(0, 0, 0, 0.87);
      }

      &.left {
        transform: rotate(-135deg) translate(-50%);
      }

      &.right {
        transform: rotate(45deg);
      }
    }

    &.disabled {
      pointer-events: none;

      .arrow::before {
        border-right: 0.12em solid rgba(0, 0, 0, 0.43);
        border-top: 0.12em solid rgba(0, 0, 0, 0.43);
      }

      &:hover {
        background-color: transparent;
        cursor: default;
      }
    }
  }
}
```

Instale o pacote `sass`:

```shell
npm i sass
```

#### Sobre Pagination:

Pagination usa um hook personalizado chamado `usePagination` para calcular quais p√°ginas devem ser exibidas e em que ordem.

O componente renderiza uma lista de n√∫meros de p√°gina, com a p√°gina atual destacada. O usu√°rio poder√° navegar pelos resultados da lista dividida em v√°rias p√°ginas.

Propriedades do componente:

- onPageChange: uma fun√ß√£o que ser√° chamada quando o usu√°rio clicar em um n√∫mero de p√°gina. Ela recebe como par√¢metro o n√∫mero da p√°gina que o usu√°rio selecionou.
- totalCount: o n√∫mero total de itens que ser√£o paginados.
- siblingCount: o n√∫mero de links de p√°gina exibidos √† esquerda e √† direita do link da p√°gina atual. O padr√£o √© 1.
- currentPage: o n√∫mero da p√°gina atual.
- pageSize: o n√∫mero de itens exibidos em cada p√°gina.

O componente usa a fun√ß√£o usePagination para gerar uma matriz de n√∫meros de p√°gina que deve ser exibida ao usu√°rio. Essa fun√ß√£o recebe como par√¢metros a p√°gina atual, o n√∫mero total de itens, o n√∫mero de links e o tamanho da p√°gina.

A fun√ß√£o usePagination retorna uma matriz de n√∫meros de p√°gina que deve ser exibida na interface do usu√°rio. Ela tamb√©m pode incluir um valor especial DOTS, que √© usado para indicar que h√° mais p√°ginas entre as que j√° est√£o sendo exibidas.

O componente usa o currentPage e o paginationRange para gerar a lista de n√∫meros de p√°gina que ser√£o exibidos para o usu√°rio. Ele tamb√©m usa as fun√ß√µes onNext e onPrevious para permitir que o usu√°rio navegue para a pr√≥xima ou para a p√°gina anterior, respectivamente.

O componente renderiza a lista de n√∫meros de p√°gina em uma lista n√£o ordenada HTML (\<ul>), com cada n√∫mero de p√°gina sendo um item de lista (\<li>). O item da lista atual √© destacado com a classe CSS "selected".

O componente tamb√©m renderiza setas para permitir que o usu√°rio navegue para a pr√≥xima ou para a p√°gina anterior. Se o usu√°rio estiver na primeira ou na √∫ltima p√°gina, o componente desativa o link correspondente para que ele n√£o possa ser clicado.

Crie `usePagination.ts` dentro de `src/`e deixe conforme a seguir:

```javascript
import { useMemo } from 'react'

export const DOTS = '...'

interface Props {
  totalCount: number
  pageSize: number
  siblingCount: number
  currentPage: number
}

const range = (start: number, end: number) => {
  const length = end - start + 1
  return Array.from({ length }, (_, idx) => idx + start)
}

export const usePagination = ({
  totalCount,
  pageSize,
  siblingCount = 1,
  currentPage,
}: Props) => {
  const paginationRange = useMemo(() => {
    const totalPageCount = Math.ceil(totalCount / pageSize)

    const totalPageNumbers = siblingCount + 5

    if (totalPageNumbers >= totalPageCount) {
      return range(1, totalPageCount)
    }

    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1)
    const rightSiblingIndex = Math.min(
      currentPage + siblingCount,
      totalPageCount,
    )


    const shouldShowLeftDots = leftSiblingIndex > 2
    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2

    const firstPageIndex = 1
    const lastPageIndex = totalPageCount

    if (!shouldShowLeftDots && shouldShowRightDots) {
      const leftItemCount = 3 + 2 * siblingCount
      const leftRange = range(1, leftItemCount)

      return [...leftRange, DOTS, totalPageCount]
    }

    if (shouldShowLeftDots && !shouldShowRightDots) {
      const rightItemCount = 3 + 2 * siblingCount
      const rightRange = range(
        totalPageCount - rightItemCount + 1,
        totalPageCount,
      )
      return [firstPageIndex, DOTS, ...rightRange]
    }

    if (shouldShowLeftDots && shouldShowRightDots) {
      const middleRange = range(leftSiblingIndex, rightSiblingIndex)
      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex]
    }
    return undefined
  }, [totalCount, pageSize, siblingCount, currentPage])

  return paginationRange
}

```

#### Sobre usePagination:

Este c√≥digo √© respons√°vel por retornar uma lista de p√°ginas a serem exibidas em um componente de pagina√ß√£o, dado um conjunto de par√¢metros de entrada, como o n√∫mero total de itens, o n√∫mero de itens por p√°gina, o n√∫mero de itens vizinhos a serem exibidos √† esquerda e √† direita da p√°gina atual e a p√°gina atual.

A fun√ß√£o `range` √© uma fun√ß√£o que cria um array de n√∫meros inteiros de um intervalo espec√≠fico.

O hook calcula o n√∫mero total de p√°ginas necess√°rias, em seguida, calcula o n√∫mero total de p√°ginas que devem ser exibidas (incluindo p√°ginas vizinhas e pontos de suspens√£o), que √© definido como `siblingCount + 5`.

Se o n√∫mero total de p√°ginas for menor ou igual ao n√∫mero total de p√°ginas que devem ser exibidas, a fun√ß√£o simplesmente retorna um array contendo todas as p√°ginas de 1 a `totalPageCount`.

Se o n√∫mero total de p√°ginas for maior que o n√∫mero total de p√°ginas que devem ser exibidas, a fun√ß√£o calcular√° quais p√°ginas vizinhas devem ser exibidas com base na p√°gina atual e no n√∫mero de p√°ginas vizinhas desejadas. A fun√ß√£o tamb√©m calcula se os pontos de suspens√£o devem ser exibidos √† esquerda ou √† direita, com base nas p√°ginas vizinhas calculadas anteriormente.

A fun√ß√£o `useMemo` √© usada para armazenar em cache o resultado da lista de p√°ginas, garantindo que ela s√≥ seja recalculada quando as depend√™ncias (total de itens, n√∫mero de itens por p√°gina, n√∫mero de itens vizinhos e p√°gina atual) mudarem.

No final, o hook retorna a lista de p√°ginas calculada.

![gif pagination](/assets/posts/paginate.gif)
d:T468,
---

Debug como um humano , n√£o um rob√¥. Finalmente, um cliente REST que voc√™ vai adorar!

‚Äã Muito mais que um cliente HTTP. Auxiliares avan√ßados de autentica√ß√£o, modelagem encadeamento de solicita√ß√µes ajudam a fazer as coisas mais rapidamente.

‚Äã Esse software √© uma excelente alternativa para poder trabalhar com api, no site tem os procedimentos para instalar no linux. As instru√ß√µes s√£o para ubuntu ou utilizar o snap.

‚Äã No link a seguir, tem os pacotes para instala√ß√£o direto do github onde h√° a op√ß√£o de appimage (a qual prefiro em rela√ß√£o ao snap, para usar no Debian)

[download](https://updates.insomnia.rest/downloads/release/latest?app=com.insomnia.app&source=website)

‚Äã Click em Insomnia-x.x.x.AppImage ap√≥s o download d√™ a permiss√£o: abra o terminal em Downloads e digite:

```shell
$ chmod +x Insomnia-x.x.x.AppImage //troque o x.x.x pela vers√£o de download
```

para executar no terminal:

```shell
$ ./Insomnia-x.x.x.AppImage
```

[![upload-image Insomnia](/assets/posts/Insomnia.png)](https://updates.insomnia.rest/downloads/release/latest?app=com.insomnia.app&source=website)
e:T1778,
---

Creating pages is an integral part of any framework. Today we'll be looking at three different types of pages that we can leverage in Next.js.

1. Static pages (`/about`, `/contact`)
2. Dynamic page content (`/posts/all`)
3. Dynamic page paths (`/posts/1`, `posts/2`)

Let's look at how we can create these in Next.js.

## Static pages in Next.js

To create static pages, we can simply create a file in our `pages` folder.
This file can be a variety of extensions: `.js`, `.jsx`, `.ts`, `.tsx`.

Let's create a simple static contact page for our [Next.js tailwind starter](https://github.com/rebelchris/next-tailwind).

Create a file called `contact.js` in your `pages` folder.

```js
import Head from 'next/head';

export default function Contact() {
  return (
    <div className="flex items-center justify-center min-h-screen">
      <Head>
        <title>Contact page</title>
        <meta name="description" content="Contact us" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="max-w-xs my-2 overflow-hidden rounded shadow-lg">
        <div className="px-6 py-4">
          <div className="mb-2 text-xl font-bold">Contact us</div>
          <p className="text-base text-grey-darker">
            This will be the place to contact us later on.
          </p>
        </div>
      </div>
    </div>
  );
}
```

And now if we run our script again `npm run dev` we can visit `http://localhost:3000/contact`.

This should now show the page we just created.

![Contact page in Next.js](https://cdn.hashnode.com/res/hashnode/image/upload/v1631702332167/H9HkNDp6F.png)

## Creating dynamic based pages

However, we often want our page to contain data from an external resource.

Let's take the Anime API we used before as an example.
The API endpoint we'll be using: `https://api.jikan.moe/v3/top/anime/1`.

But let's first create a file called `shows.js` that should list all the top anime shows.

We need to use the `getStaticProps` function for this to work. This function will fire and fetch data from an API.
Then passes it to the actual view.

So let's break it up into sections and fill those out one by one.

```js
function Shows({ shows }) {
  return (
    // HTML CODE
  );
}

export async function getStaticProps() {
  const shows = // TODO;
  return {
    props: {
      shows,
    },
  };
}

export default Shows;
```

So this is the main wireframe. We have our function that contains the JSX code (HTML), then we have the `getStaticProps` function, which fires on build time.

This can do API calls while we await it.
And we can then return them as props.

These props are passed to our primary function (Shows).

So let's see how we can fetch data inside the `getStaticProps` function.

```js
const res = await fetch('https://api.jikan.moe/v3/top/anime/1');
const shows = await res.json();
```

As you can see, top-level awaits are supported out of the box, which is super handy!
We call the API, await the response, and convert it into a JSON object.

Then as for our HTML, we can now use this `shows` object since we passed it to our function.

```js
function Shows({ shows }) {
  return (
    <div className="grid min-h-screen grid-cols-5 gap-4 p-5">
      {shows.top.map((show) => (
        <div
          key={show.id}
          className="max-w-xs my-2 overflow-hidden rounded shadow-lg "
        >
          <img
            className="flex-1 object-cover w-full h-80"
            src={show.image_url}
            alt={show.title}
          />
          <div className="px-6 py-4">
            <div className="mb-2 text-xl font-bold">{show.title}</div>
          </div>
        </div>
      ))}
    </div>
  );
}
```

We create a simple render of each show's own card, with an image and title of the anime show.

![Top anime show in Next.js](https://cdn.hashnode.com/res/hashnode/image/upload/v1631712831922/I1Yb9K2DQ.png)

## Creating dynamic page paths

We still only have one page that loads dynamic data with the above example.
Let's say we want to create a single page for each show.

These pages could host more detailed information about the show.

In Next.js, we can create dynamic pages by wrapping them in brackets like `show/[id].js` where the `[id]` is dynamic.

For this, we can leverage the `getStaticPaths` method.
This can pre-fetch our endpoints.

And we can still include the `getStaticProps` to retrieve the data on build time.

Let's put this together.

```js
function Show(show) {
  return <h1>{show.title}</h1>;
}

export async function getStaticPaths() {
  const res = await fetch('https://api.jikan.moe/v3/top/anime/1');
  const shows = await res.json();
  const paths = shows.top.map((show) => {
    return {
      params: { id: show.mal_id.toString() },
    };
  });

  return { paths, fallback: false };
}

export async function getStaticProps({ params }) {
  const res = await fetch(`https://api.jikan.moe/v3/anime/${params.id}`);
  const show = await res.json();
  return { props: show };
}

export default Show;
```

Wow, quite a lot going on, right?
First, we have a simple view to keep things easy. We use an `h1` to return the title of the single page.

Then we use `getStaticPaths` to create a path for each top show.
We use the `mal_id` to generate unique ID pages.

Then we use the `getStaticProps` function to retrieve these IDs from the URL and fetch the detailed view for each show.

It results in a single page for each show.

![Single page in Next.js](https://cdn.hashnode.com/res/hashnode/image/upload/v1631715374299/92TyD_WIe.png)

And that's it. We now have explored these three ways of creating pages in Next.js.
I hope you found this helpful article. You can also find the complete code on [GitHub](https://github.com/rebelchris/next-tailwind/tree/pages).

### Thank you for reading, and let's connect!

Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on [Facebook](https://www.facebook.com/DailyDevTipsBlog) or [Twitter](https://twitter.com/DailyDevTips1)
f:T93e,
---

<img src="/assets/img/sample/react-native/react-native.png" alt="react-native" style="width:200px; heigth:200px; ">

O pacote de fonte de √≠cones, react-native-vector-icons, √© uma forma de implementar icones no projeto de forma r√°pida e elegante, √≠cones presentes no pacote [clique aqui](https://oblador.github.io/react-native-vector-icons/){:target="\_blank" rel="noopener"}. √â √≥timo para bot√µes, logotipos, barras de navega√ß√£o e guias, f√°cil de estender, estilizar e integrar no projeto.
Para utilizar os pacotes de fontes no React-native vamos utilizar a biblioteca react-native-vector-icons.

Criando um projeto para testes, considerando que tenha o react-native, yarn e emulador ja instalados, abra o terminal:

```javascript
npx react-native init MyApp --template react-native-template-typescript
```

```shell
cd MyApp
```

Instale a biblioteca de √≠cones:

```shell
yarn add react-native-vector-icons
```

Realize o link da biblioteca com o c√≥digo nativo com o comando:

```shell
yarn react-native link
```

Carregue o projeto no emulador

```shell
yarn android
yarn start
```

Ser√° carregado o template padr√£o do react-native, para testar edite o App.tsx colando o c√≥digo abaixo:

```javascript
import React from 'react';
import {SafeAreaView, View, Text, StatusBar, StyleSheet} from 'react-native';
import Icon from 'react-native-vector-icons/Feather';

Icon.loadFont(); // carrega os icones

declare const global: {HermesInternal: null | {}};

const App = () => {
  return (
    <>
      <StatusBar barStyle="dark-content" />
      <SafeAreaView>
        <View style={styles.container}>
          <Text>
            Ol√°
            <Icon name="github" size={30} color="red" />
          </Text>
        </View>
      </SafeAreaView>
    </>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    paddingTop: 200,
  },
});

export default App;

```

Ficar√° com o icone do github conforme a imagem:

![image]({{ "/assets/img/sample/react-native/icon-vector.png" | relative_url }}){:target="\_blank" rel="noopener"}

fontes:

[Rocketseat](https://blog.rocketseat.com.br/utilizando-fontes-de-icones-no-react-native/){:target="\_blank" rel="noopener"}

[github.com/oblador](https://github.com/oblador/react-native-vector-icons){:target="\_blank" rel="noopener"}
10:T632,
---

O Node Version Manager √© um script bash usado para gerenciar v√°rias vers√µes lan√ßadas do Node.js. Plataformas: unix, macOS e windows WSL. Ele permite que voc√™ execute opera√ß√µes como instalar, desinstalar, alternar vers√£o etc. Para instalar o nvm, use este script de instala√ß√£o.

obs: √© preciso ter o curl instalado.

no terminal:

```shell
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
```

A execu√ß√£o de qualquer um dos comandos acima baixa um script e o executa. O script clona o reposit√≥rio nvm para ~ / .nvm e tenta adicionar as linhas de origem do snippet abaixo ao arquivo de perfil correto(`~/.bash_profile`, `~/.zshrc`, `~/.profile`, or `~/.bashrc`).

```shell
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
```

Para instalar uma vers√£o do Node.js:

```javascript
nvm install v14.3.0
```

Depois disso, voc√™ pode usar o nvm para alternar entre vers√µes lan√ßadas. Por exemplo, se a vers√£o do Node.js que deseja utilizar for v14.3.0:

```javascript
nvm use v14.3.0
```

Define a vers√£o default do Node.js no shell:

```javascript
nvm alias default v14.3.0
```

Desistalar uma vers√£o do Node.js:

```javascript
nvm uninstall 8.0.0
```

Listar vers√µes instaladas no sistema:

```shell
nvm list
```

Fonte:

[github nvm](https://github.com/nvm-sh/nvm){:target="\_blank" rel="noopener"}

[nodejs.org](https://nodejs.org/en/download/package-manager/){:target="\_blank" rel="noopener"}

‚Äã
11:Tb85,
---

![image]({{ "/assets/img/sample/react-reload/reload.png" | relative_url }})

<div style="text-align: justify">  
Para resolver esse problema √© preciso alterar o valor  de max_user_watches em inotify, cada rel√≥gio inotify usado ocupa 540 bytes (sistema de 32 bits) ou 1 kB (duplo em 64 bits) Isso sai da mem√≥ria do kernel, que n√£o pode ser trocada. Supondo que voc√™ definiu o m√°ximo em 524288 e todos foram usados (improv√°vel), voc√™ usaria aproximadamente 256 MB / 512 MB de mem√≥ria do kernel de 32 bits / 64 bits.<br />
<br />
Observe que seu aplicativo tamb√©m utilizar√° mem√≥ria adicional para acompanhar os identificadores inotify, os caminhos de arquivo / no diret√≥rio etc.<br />
<br /></div>

Para verificar o n√∫mero m√°ximo de rel√≥gios inotify:

```shell
cat /proc/sys/fs/inotify/max_user_watches
```

No Debian esse valor padr√£o √© 8192, para definir o n√∫mero m√°ximo de rel√≥gios inotify temporariamente:

```shell
 sudo sysctl fs.inotify.max_user_watches = com o seu valor preferido no final.
```

**Para definir o n√∫mero m√°ximo de rel√≥gios inotify definitivamente:**

```shell
sudo -i
echo "fs.inotify.max_user_watches=524288" |tee -a /etc/sysctl.conf
sysctl -p
exit
```

<div style="text-align: justify"> 
Permanentemente (informa√ß√µes mais detalhadas):<br />

Coloque fs.inotify.max_user_watches = 524288 nas configura√ß√µes do sysctl. Dependendo do seu sistema, eles podem estar em um dos seguintes locais:<br />
Debian / RedHat: /etc/sysctl.conf<br />
Arch: coloque um novo arquivo em /etc/sysctl.d/, por exemplo /etc/sysctl.d/40-max-user-watches.conf<br />
Voc√™ pode recarregar as configura√ß√µes do sysctl para evitar uma reinicializa√ß√£o: sysctl -p (Debian / RedHat) ou sysctl --system (Arch)<br />
Verifique se o n√∫mero m√°ximo de rel√≥gios inotify foi atingido:<br />

Use tail com a op√ß√£o -f (follow) em qualquer arquivo antigo, por exemplo tail -f / var / log / dmesg: - Se estiver tudo bem, mostrar√° as √∫ltimas 10 linhas e far√° uma pausa; abortar com Ctrl-C - Se voc√™ estiver sem rel√≥gio, falhar√° com este erro um tanto enigm√°tico:

</div><br />

```shell
tail: cannot watch '/var/log/dmsg': No space left on device
```

Para ver o que est√° usando os rel√≥gios inotify:

```shell
find /proc/*/fd -lname anon_inode:inotify |
   cut -d/ -f3 |
   xargs -I '{}' -- ps --no-headers -o '%p %U %c' -p '{}' |
   uniq -c |
   sort -nr
```

A primeira coluna indica o n√∫mero de inotify fds (embora n√£o seja o n√∫mero de rel√≥gios) e a segunda mostra o PID desse processo.

fontes:

[askbuntu](https://askubuntu.com/questions/716431/inotify-max-user-watches-value-resets-on-reboot-how-to-change-it-permanently){:target="\_blank" rel="noopener"}

[dev.to](https://dev.to/rubiin/ubuntu-increase-inotify-watcher-file-watch-limit-kf4){:target="\_blank" rel="noopener"}

[stackoverflow](https://stackoverflow.com/questions/42189575/create-react-app-reload-not-working){:target="\_blank" rel="noopener"}
12:T6bf,
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est ullamcorper eget. At imperdiet dui accumsan sit amet nulla facilities morbi tempus. Praesent elementum facilisis leo vel fringilla. Congue mauris rhoncus aenean vel. Egestas sed tempus urna et pharetra pharetra massa massa ultricies.

Venenatis cras sed felis eget velit. Consectetur libero id faucibus nisl tincidunt. Gravida in fermentum et sollicitudin ac orci phasellus egestas tellus. Volutpat consequat mauris nunc congue nisi vitae. Id aliquet risus feugiat in ante metus dictum at tempor. Sed blandit libero volutpat sed cras. Sed odio morbi quis commodo odio aenean sed adipiscing. Velit euismod in pellentesque massa placerat. Mi bibendum neque egestas congue quisque egestas diam in arcu. Nisi lacus sed viverra tellus in. Nibh cras pulvinar mattis nunc sed. Luctus accumsan tortor posuere ac ut consequat semper viverra. Fringilla ut morbi tincidunt augue interdum velit euismod.

## Lorem Ipsum

Tristique senectus et netus et malesuada fames ac turpis. Ridiculous mus mauris vitae ultricies leo integer malesuada nunc vel. In mollis nunc sed id semper. Egestas tellus rutrum tellus pellentesque. Phasellus vestibulum lorem sed risus ultricies tristique nulla. Quis blandit turpis cursus in hac habitasse platea dictumst quisque. Eros donec ac odio tempor orci dapibus ultrices. Aliquam sem et tortor consequat id porta nibh. Adipiscing elit duis tristique sollicitudin nibh sit amet commodo nulla. Diam vulputate ut pharetra sit amet. Ut tellus elementum sagittis vitae et leo. Arcu non odio euismod lacinia at quis risus sed vulputate.
0:{"P":null,"b":"NFIpxduXXrLtqFRixlks1","p":"","c":["",""],"i":false,"f":[[["",{"children":["__PAGE__",{}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/277fcc79e498577f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"rel":"apple-touch-icon","sizes":"180x180","href":"/favicon/apple-touch-icon.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"32x32","href":"/favicon/favicon-32x32.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"16x16","href":"/favicon/favicon-16x16.png"}],["$","link",null,{"rel":"manifest","href":"/favicon/site.webmanifest"}],["$","link",null,{"rel":"mask-icon","href":"/favicon/safari-pinned-tab.svg","color":"#000000"}],["$","link",null,{"rel":"shortcut icon","href":"/favicon/favicon.ico"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#000000"}],["$","meta",null,{"name":"msapplication-config","content":"/favicon/browserconfig.xml"}],["$","meta",null,{"name":"theme-color","content":"#000"}],["$","link",null,{"rel":"alternate","type":"application/rss+xml","href":"/feed.xml"}]]}],["$","body",null,{"className":"bg-slate-100\n            dark:bg-gray-900\n            dark:from-gray-900\n            dark:to-gray-800 \n            bg-gradient-to-r \n            h-screen \n            __className_d65c78","children":["$","$L2",null,{"children":[["$","$L3",null,{}],["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","footer",null,{"className":"bg-gray-700  mt-1 py-4","children":["$","div",null,{"className":"container mx-auto flex justify-center","children":["$","span",null,{"className":"mx-auto text-neutral-200","children":"¬© 2025 GrmDevTips"}]}]}]]}]}]]}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","main",null,{"children":["$","article",null,{"className":"container flex flex-col pt-6 sm:mx-2 md:mx-auto flex-1","children":["$","$L6",null,{"allPosts":[{"title":"Deixando o Bash com cara nova","metaDesc":"Deixando o Bash com cara nova: ble.sh + Starship + Nerd Font","coverImage":"/assets/blog/post/Bash.webp","author":{"name":"Glaulher Medeiros","picture":"/assets/blog/authors/glaulher.jpeg"},"ogImage":{"url":"/assets/blog/post/Bash.webp"},"publishedDate":"2025-05-12T16:34:00Z","tags":["linux"],"slug":"2025-05-12-bash-like-zsh","content":"$7"},{"title":"Corrigindo erro de libva no Fedora","metaDesc":"Habilitar acelera√ß√£o de video em processador antigo no Fedora","coverImage":"/assets/blog/post/driveI965.webp","author":{"name":"Glaulher Medeiros","picture":"/assets/blog/authors/glaulher.jpeg"},"ogImage":{"url":"/assets/blog/post/driveI965.webp"},"publishedDate":"2025-02-17T16:34:00Z","tags":["linux"],"slug":"2025-02-17-driveI965","content":"$8"},{"title":"Nvim como editor de c√≥digo","metaDesc":"Kickstart.nvim, uma configura√ß√£o m√≠nima e eficiente mantida por TJ Devries","coverImage":"/assets/blog/post/nvim.webp","author":{"name":"Glaulher Medeiros","picture":"/assets/blog/authors/glaulher.jpeg"},"ogImage":{"url":"/assets/blog/post/nvim.webp"},"publishedDate":"2025-02-13T16:34:00Z","categories":["Blogging","Tutorial"],"tags":["nvim","lua"],"slug":"2025-02-13-nvim","content":"$9"},{"title":"Atualizando meu blog com Next.js 15","metaDesc":"Criando um blog pessoal com nextjs e markdown","coverImage":"/assets/blog/post/Blog.webp","author":{"name":"Glaulher Medeiros","picture":"/assets/blog/authors/glaulher.jpeg"},"ogImage":{"url":"/assets/blog/post/Blog.png"},"publishedDate":"2025-02-11T16:34:00Z","categories":["Blogging","Tutorial"],"tags":["nextjs","markdown","react"],"slug":"2025-02-11-blog","content":"$a"},{"title":"npm-check-updates","metaDesc":"O npm (Node Package Manager) √© uma ferramenta importante para desenvolvedores de JavaScript","coverImage":"/assets/blog/post/Npm-check-update.webp","author":{"name":"Glaulher Medeiros","picture":"/assets/blog/authors/glaulher.jpeg"},"ogImage":{"url":"/assets/blog/post/Npm-check-update.webp"},"publishedDate":"2023-04-01T16:34:00Z","tags":["nodejs","npm"],"slug":"2023-04-01-UpdatePackage","content":"$b"},{"title":"Componente de pagina√ß√£o em react","metaDesc":"A pagina√ß√£o √© um recurso que permite dividir grandes conjuntos de dados em p√°ginas","coverImage":"/assets/blog/post/PaginateBanner.webp","author":{"name":"Glaulher Medeiros","picture":"/assets/blog/authors/glaulher.jpeg"},"ogImage":{"url":"/assets/blog/post/PaginateBanner.webp"},"publishedDate":"2023-03-14T16:34:00Z","tags":["react","tutorial"],"slug":"2023-03-14-Pagination_","content":"$c"},{"title":"Insomnia em distros linux","metaDesc":"\tMuito mais que um cliente HTTP. Auxiliares avan√ßados de autentica√ß√£o, modelagem encadeamento","coverImage":"/assets/blog/post/InsomniaBanner.webp","author":{"name":"Glaulher Medeiros","picture":"/assets/blog/authors/glaulher.jpeg"},"ogImage":{"url":"/assets/blog/post/InsomniaBanner.webp"},"publishedDate":"2023-03-06T16:34:00Z","tags":["insomnia","rest","linux"],"slug":"2023-03-06-Insomnia","content":"$d"},{"title":"Next.js page options and how they work","metaDesc":"How to use pages in Next.js exploring the options","coverImage":"/assets/blog/post/22-09-2021.jpg","author":{"name":"Tim Neutkens","picture":"/assets/blog/authors/tim.jpeg"},"ogImage":{"url":"/assets/blog/post/22-09-2021.jpg"},"publishedDate":"2021-09-22T05:35:07.322Z","tags":["nextjs","react"],"slug":"2021-09-22-nextjs-page-options-and-how-they-work","content":"$e"},{"title":"React-native n√£o carrega o app","metaDesc":"error Failed to install the app. Make sure you have the Android development environment set up","coverImage":"/assets/blog/post/22-09-2021.jpg","author":{"name":"Glaulher Medeiros","picture":"/assets/blog/authors/glaulher.jpeg"},"ogImage":{"url":"/assets/blog/post/22-09-2021.jpg"},"publishedDate":"2020-11-08T16:34:00Z","tags":["react","react-native","linux"],"slug":"2020-11-08-React-not-emul","content":"\n---\n\nMe deparei com esse problema, o yarn android n√£o conseguia carregar o app no emulador e entregava a mensagem de erro:\"error Failed to install the app. Make sure you have the Android development environment set up\", ao tentar executar:\n\n```shell\ncd android && ./gradlew clean\n```\n\nme retornava que estava sem permiss√£o:\n\nDei permiss√£o:\n\n```shell\nchmod 777 -R gradlew\n```\n\ne ao executar yarn android o app carregou no emulador :)\n\nfontes:\n\n[stackoverflow](https://stackoverflow.com/questions/56891033/facing-issue-failed-to-install-the-app-make-sure-you-have-the-android-develop){:target=\"\\_blank\" rel=\"noopener\"}\n\n[github.com](https://github.com/facebook/react-native/issues/23306){:target=\"\\_blank\" rel=\"noopener\"}\n"},{"title":"√çcones no react-native com o react-native-vector-icons","metaDesc":"react-native-vector-icons, √© uma forma de implementar icones no projeto de forma r√°pida e elegante","coverImage":"/assets/blog/post/22-09-2021.jpg","author":{"name":"Glaulher Medeiros","picture":"/assets/blog/authors/glaulher.jpeg"},"ogImage":{"url":"/assets/blog/post/22-09-2021.jpg"},"publishedDate":"2020-11-02T16:34:00Z","tags":["react","react-native","linux"],"slug":"2020-10-02-react-native-vector-icons","content":"$f"},{"title":"Gerenciador nvm no Linux","metaDesc":"O Node Version Manager √© um script bash usado para gerenciar v√°rias vers√µes lan√ßadas do Node.js","coverImage":"/assets/blog/post/22-09-2021.jpg","author":{"name":"Glaulher Medeiros","picture":"/assets/blog/authors/glaulher.jpeg"},"ogImage":{"url":"/assets/blog/post/22-09-2021.jpg"},"publishedDate":"2020-06-16T16:34:00Z","tags":["nodejs","linux"],"slug":"2020-06-16-nvm","content":"$10"},{"title":"React n√£o recarrega a p√°gina ao salvar no linux","metaDesc":"Para resolver esse problema √© preciso alterar o valor  de max_user_watches em inotify...","coverImage":"/assets/blog/post/22-09-2021.jpg","author":{"name":"Glaulher Medeiros","picture":"/assets/blog/authors/glaulher.jpeg"},"ogImage":{"url":"/assets/blog/post/22-09-2021.jpg"},"publishedDate":"2020-06-14T16:34:00Z","tags":["blog","tutorial","react","linux"],"slug":"2020-06-14-React-not-reload","content":"$11"},{"title":"Learn How to Pre-render Pages Using Static Generation with Next.js","metaDesc":"Lorem ipsum dolor sit amet, consectetur adipiscing elit.","coverImage":"/assets/blog/post/hello-world/cover.jpg","author":{"name":"Tim Neutkens","picture":"/assets/blog/authors/tim.jpeg"},"ogImage":{"url":"/assets/blog/post/hello-world/cover.jpg"},"publishedDate":"2020-03-16T05:35:07.322Z","slug":"hello-world","content":"$12"}]}]}]}],null,["$","$L13",null,{"children":"$L14"}]]}],{},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","K0o2gf8UnSB2JJZDhF2Hx",{"children":[["$","$L15",null,{"children":"$L16"}],["$","$L17",null,{"children":"$L18"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$19","$undefined"],"s":false,"S":true}
18:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
16:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Blog Post-it"}],["$","meta","2",{"name":"description","content":"Meu blog sobre tecnologia utilizando Next.js and Markdown."}],["$","meta","3",{"property":"og:title","content":"Blog Post-it"}],["$","meta","4",{"property":"og:description","content":"Meu blog sobre tecnologia utilizando Next.js and Markdown."}],["$","meta","5",{"property":"og:image","content":"https://og-image.vercel.app/Next.js%20Blog%20Starter%20Example.png?theme=light&md=1&fontSize=100px&images=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Ffront%2Fassets%2Fdesign%2Fnextjs-black-logo.svg"}],["$","meta","6",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","7",{"name":"twitter:title","content":"Blog Post-it"}],["$","meta","8",{"name":"twitter:description","content":"Meu blog sobre tecnologia utilizando Next.js and Markdown."}],["$","meta","9",{"name":"twitter:image","content":"https://og-image.vercel.app/Next.js%20Blog%20Starter%20Example.png?theme=light&md=1&fontSize=100px&images=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Ffront%2Fassets%2Fdesign%2Fnextjs-black-logo.svg"}]]
14:null
