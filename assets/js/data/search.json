[ { "title": "React-native não carrega o app", "url": "/posts/React-not-emul/", "categories": "Blogging, Tutorial", "tags": "React, React-native, Linux", "date": "2020-11-08 13:27:00 -0300", "snippet": "Me deparei com esse problema, o yarn android não conseguia carregar o app no emulador e entregava a mensagem de erro:”error Failed to install the app. Make sure you have the Android development environment set up”, ao tentar executar:cd android &amp;amp;&amp;amp; ./gradlew cleanme retornava que estava sem permissão:Dei permissão:chmod 777 -R gradlewe ao executar yarn android o app carregou no emulador :)fontes:stackoverflowgithub.com" }, { "title": "Ícones no react-native com o react-native-vector-icons", "url": "/posts/react-native-vector-icons/", "categories": "Blogging, Tutorial", "tags": "React, React-native, Linux", "date": "2020-10-02 14:28:00 -0300", "snippet": "O pacote de fonte de ícones, react-native-vector-icons, é uma forma de implementar icones no projeto de forma rápida e elegante, ícones presentes no pacote clique aqui. É ótimo para botões, logotipos, barras de navegação e guias, fácil de estender, estilizar e integrar no projeto.Para utilizar os pacotes de fontes no React-native vamos utilizar a biblioteca react-native-vector-icons.Criando um projeto para testes, considerando que tenha o react-native, yarn e emulador ja instalados, abra o terminal:npx react-native init MyApp --template react-native-template-typescriptcd MyApp Instale a biblioteca de ícones:yarn add react-native-vector-iconsRealize o link da biblioteca com o código nativo com o comando:yarn react-native linkCarregue o projeto no emuladoryarn androidyarn startSerá carregado o template padrão do react-native, para testar edite o App.tsx colando o código abaixo:import React from &#39;react&#39;;import {SafeAreaView, View, Text, StatusBar, StyleSheet} from &#39;react-native&#39;;import Icon from &#39;react-native-vector-icons/Feather&#39;;Icon.loadFont(); // carrega os iconesdeclare const global: {HermesInternal: null | {}};const App = () =&amp;gt; { return ( &amp;lt;&amp;gt; &amp;lt;StatusBar barStyle=&quot;dark-content&quot; /&amp;gt; &amp;lt;SafeAreaView&amp;gt; &amp;lt;View style={styles.container}&amp;gt; &amp;lt;Text&amp;gt; Olá &amp;lt;Icon name=&quot;github&quot; size={30} color=&quot;red&quot; /&amp;gt; &amp;lt;/Text&amp;gt; &amp;lt;/View&amp;gt; &amp;lt;/SafeAreaView&amp;gt; &amp;lt;/&amp;gt; );};const styles = StyleSheet.create({ container: { flex: 1, alignItems: &#39;center&#39;, justifyContent: &#39;center&#39;, paddingTop: 200, },});export default App;Ficará com o icone do github conforme a imagem:fontes:Rocketseatgithub.com/oblador" }, { "title": "Jekyll para editar páginas do github", "url": "/posts/jekyll/", "categories": "Blogging, Tutorial", "tags": "jekyll, Linux", "date": "2020-09-27 01:09:00 -0300", "snippet": "Jekyll é um gerador de site estático simples, que reconhece blogs , para sites pessoais, de projetos ou de organizações. Escrito em Ruby por Tom Preston-Werner , co-fundador do GitHub , é distribuído sob a licença MIT de código aberto .Acessar a página https://rvm.io/ e seguir os passos para instalar o rvm, em seguida executar os comandos no terminal:gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDBSe houver algum erro com a chave, a instalação irá sugerir uma outra.Para o próximo comando é necessário ter o curl instalado.\\curl -sSL https://get.rvm.io | bash -s stable --rubyAo fim da instalação será sugerido incluir a linha parecida com essa no .bashrc, .zshrc ou em qualquer outro shell que esteja utilizando:exemplo:nano ~/.bashrcAdicione a linha abaixo ( OBS: substitua glaulher pelo seu usuário) no final do arquivo, ctrl + o para salvar, ctrl + x para sair:source /home/glaulher/.rvm/scripts/rvmFeche e abra novamente o terminal.Acesse o link https://jekyllrb.com/ para instalar o jekyll:gem install bundler jekyllExemplo de página estática:jekyll new my-awesome-siteRodando a aplicação de teste:cd my-awesome-sitebundle exec jekyll serveFonte:rubyjekyll​" }, { "title": "Gerenciador nvm no Linux", "url": "/posts/nvm/", "categories": "Blogging, Tutorial", "tags": "Nodejs, Linux", "date": "2020-06-16 16:40:00 -0300", "snippet": "O Node Version Manager é um script bash usado para gerenciar várias versões lançadas do Node.js. Plataformas: unix, macOS e windows WSL. Ele permite que você execute operações como instalar, desinstalar, alternar versão etc. Para instalar o nvm, use este script de instalação.obs: é preciso ter o curl instalado.no terminal:curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bashA execução de qualquer um dos comandos acima baixa um script e o executa. O script clona o repositório nvm para ~ / .nvm e tenta adicionar as linhas de origem do snippet abaixo ao arquivo de perfil correto(~/.bash_profile, ~/.zshrc, ~/.profile, or ~/.bashrc).export NVM_DIR=&quot;$([ -z &quot;${XDG_CONFIG_HOME-}&quot; ] &amp;amp;&amp;amp; printf %s &quot;${HOME}/.nvm&quot; || printf %s &quot;${XDG_CONFIG_HOME}/nvm&quot;)&quot;[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \\. &quot;$NVM_DIR/nvm.sh&quot; # This loads nvmPara instalar uma versão do Node.js:nvm install v14.3.0Depois disso, você pode usar o nvm para alternar entre versões lançadas. Por exemplo, se a versão do Node.js que deseja utilizar for v14.3.0:nvm use v14.3.0Define a versão default do Node.js no shell:nvm alias default v14.3.0Desistalar uma versão do Node.js:nvm uninstall 8.0.0 Listar versões instaladas no sistema:nvm listFonte:github nvmnodejs.org​" }, { "title": "React não recarrega a página ao salvar no linux", "url": "/posts/React-not-reload/", "categories": "Blogging, Tutorial", "tags": "React, Linux", "date": "2020-06-14 12:27:00 -0300", "snippet": " Para resolver esse problema é preciso alterar o valor de max_user_watches em inotify, cada relógio inotify usado ocupa 540 bytes (sistema de 32 bits) ou 1 kB (duplo em 64 bits) Isso sai da memória do kernel, que não pode ser trocada. Supondo que você definiu o máximo em 524288 e todos foram usados (improvável), você usaria aproximadamente 256 MB / 512 MB de memória do kernel de 32 bits / 64 bits.Observe que seu aplicativo também utilizará memória adicional para acompanhar os identificadores inotify, os caminhos de arquivo / no diretório etc.Para verificar o número máximo de relógios inotify:cat /proc/sys/fs/inotify/max_user_watchesNo Debian esse valor padrão é 8192, para definir o número máximo de relógios inotify temporariamente: sudo sysctl fs.inotify.max_user_watches = com o seu valor preferido no final.Para definir o número máximo de relógios inotify definitivamente:sudo -iecho &quot;fs.inotify.max_user_watches=524288&quot; |tee -a /etc/sysctl.confsysctl -pexit Permanentemente (informações mais detalhadas):Coloque fs.inotify.max_user_watches = 524288 nas configurações do sysctl. Dependendo do seu sistema, eles podem estar em um dos seguintes locais:Debian / RedHat: /etc/sysctl.confArch: coloque um novo arquivo em /etc/sysctl.d/, por exemplo /etc/sysctl.d/40-max-user-watches.confVocê pode recarregar as configurações do sysctl para evitar uma reinicialização: sysctl -p (Debian / RedHat) ou sysctl --system (Arch)Verifique se o número máximo de relógios inotify foi atingido:Use tail com a opção -f (follow) em qualquer arquivo antigo, por exemplo tail -f / var / log / dmesg: - Se estiver tudo bem, mostrará as últimas 10 linhas e fará uma pausa; abortar com Ctrl-C - Se você estiver sem relógio, falhará com este erro um tanto enigmático:tail: cannot watch &#39;/var/log/dmsg&#39;: No space left on devicePara ver o que está usando os relógios inotify:find /proc/*/fd -lname anon_inode:inotify | cut -d/ -f3 | xargs -I &#39;{}&#39; -- ps --no-headers -o &#39;%p %U %c&#39; -p &#39;{}&#39; | uniq -c | sort -nrA primeira coluna indica o número de inotify fds (embora não seja o número de relógios) e a segunda mostra o PID desse processo.fontes:askbuntudev.tostackoverflow" }, { "title": "Insomnia em distros linux", "url": "/posts/Insomnia/", "categories": "Blogging, Tutorial", "tags": "Insomnia, REST, Linux", "date": "2020-06-12 16:34:00 -0300", "snippet": "Debug como um humano , não um robô. Finalmente, um cliente REST que você vai adorar!​ Muito mais que um cliente HTTP. Auxiliares avançados de autenticação, modelagem encadeamento de solicitações ajudam a fazer as coisas mais rapidamente. Site:​ Esse software é uma excelente alternativa para poder trabalhar com api, no site tem os procedimentos para instalar no linux. As instruções são para ubuntu ou utilizar o snap.​ No link a seguir, tem os pacotes para instalação direto do github onde há a opção de appimage (a qual prefiro em relação ao snap, para usar no Debian)download​ Click em Insomnia-x.x.x.AppImage após o download dê a permissão: abra o terminal em Downloads e digite:$ chmod +x Insomnia-x.x.x.AppImage //troque o x.x.x pela versão de downloadpara executar no terminal:$ ./Insomnia-x.x.x.AppImage --no-sandbox" } ]
